<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.cxy.by</groupId>
		<artifactId>MyDemo</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>com.cxy.by</groupId>
	<artifactId>MyDemo-app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>MyDemo-app</name>
	<url>http://maven.apache.org</url>

	<!-- 私服仓库部分配置开始 -->
	<!-- 配置相关私服信息指定仓库 -->
	<repositories>
		<repository>
			<id>nexus</id>
			<name>nexus</name>
			<!-- <url>http://22.34.159.198:8081/nexus/content/groups/public/</url> -->
			<url>http://localhost:8081/nexus/content/groups/public/</url>
			<!-- Release版本则代表稳定的版本 -->
			<releases>
				<enabled>true</enabled>
			</releases>
			<!-- Snapshot版本代表不稳定、尚处于开发中的版本，默认关闭，需要手动启动 -->
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<!-- 指定仓库插件 -->
	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>nexus</name>
			<!-- <url>http://22.34.159.198:8081/nexus/content/groups/public/</url> -->
			<url>http://localhost:8081/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<!-- 配置nexus服务器私服仓库项目发布配置 -->
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>发布版库</name>
			<!-- <url>http://22.34.159.198:8081/nexus/content/repositories/releases/</url> -->
			<url>http://localhost:8081/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>快照版库</name>
			<!-- <url>http://22.34.159.198:8081/nexus/content/repositories/snapshots/</url> -->
			<url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	<!-- 私服仓库部分配置结束 -->

	<properties>
		<java.version>1.8</java.version>
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<!-- compile设置编译范围内有效，在编译和打包时都会将依赖项加载进去。 -->
		<scope.selected>compile</scope.selected>
	</properties>


	<dependencies>
		<!-- 定义依赖RPC模块 -->
		<dependency>
			<groupId>com.cxy.by</groupId>
			<artifactId>MyDemo-rpc</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- 定义依赖Redis缓存模块[偏向读数据] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<!-- spring-boot mybatis依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.2</version>
		</dependency>

		<!-- 导入alibaba的jar包,现在基本都用这个管理，用来在applicationContext.xml中配置数据库 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.1.9</version>
		</dependency>

		<!-- 引入mysql驱动最新依赖包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
		</dependency>

		<!-- 直接集成阿里Dubbo微服务治理框架 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>2.6.12</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- 通过启动器方式引入依赖的Dubbo框架版本是2.6.0 -->
		<!-- <dependency> <groupId>com.alibaba.spring.boot</groupId> <artifactId>dubbo-spring-boot-starter</artifactId> 
			<version>2.0.0</version> </dependency> -->


		<!-- 集成Zookeeper服务注册和负载均衡框架 -->
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.5.5</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Zookeeper开源客户端框架：https://mvnrepository.com/artifact/com.101tec/zkclient -->
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<version>0.11</version>
		</dependency>

		<!-- Zookeeper开源客户端框架 -->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-framework</artifactId>
			<version>4.2.0</version>
		</dependency>

		<!-- 解析spring-boot配置文件[很关键，必须引入] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!--添加热部署依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入 -->
			<optional>true</optional>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- 添加热部署支持，Project中添加于spring-boot-maven-plugin之下,主要在eclipse中使用，idea中不需要添加此配置 -->
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>

			<!-- Mybatis逆向工程依赖Jar包：暂时不考虑此种方法加载数据 -->
			<!-- <plugin> <groupId>org.mybatis.generator</groupId> <artifactId>mybatis-generator-maven-plugin</artifactId> 
				<version>1.3.5</version> <configuration> <configurationFile>src/main/resources/generatorConfig.xml</configurationFile> 
				<verbose>true</verbose> <overwrite>true</overwrite> </configuration> <dependencies> 
				<dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> 
				<version>5.1.46</version> </dependency> </dependencies> </plugin> -->


		</plugins>
	</build>

</project>
